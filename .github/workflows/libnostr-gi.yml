name: libnostr GI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  generate-gir:
    name: ${{ matrix.os }} â€¢ GIR/typelib
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    env:
      CMAKE_BUILD_TYPE: Debug

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential cmake ninja-build clang git pkg-config \
                                  glib2.0-dev libgirepository1.0-dev gobject-introspection \
                                  libjansson-dev libsecp256k1-dev libwebsockets-dev
          # Build nsync from source
          git clone --depth 1 https://github.com/google/nsync.git
          cmake -S nsync -B nsync/build -DCMAKE_BUILD_TYPE=Release
          cmake --build nsync/build -j
          sudo cmake --install nsync/build

      - name: Install dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew update
          brew upgrade
          brew install cmake ninja pkg-config glib gobject-introspection jansson libsecp256k1 libwebsockets || true
          if brew info nsync >/dev/null 2>&1; then
            brew install nsync || true
          else
            git clone --depth 1 https://github.com/google/nsync.git
            cmake -S nsync -B nsync/build -DCMAKE_BUILD_TYPE=Release
            cmake --build nsync/build -j
            sudo cmake --install nsync/build
          fi

      - name: Configure (with GLib)
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DGO_WARNINGS_AS_ERRORS=ON -DNOSTR_WITH_GLIB=ON

      - name: Build and Install
        run: |
          cmake --build build -j
          sudo cmake --install build --prefix /usr

      - name: Generate GIR
        env:
          GI_SCANNER_DISABLE_CACHE: "1"
        run: |
          mkdir -p gir-build
          PKG_CFLAGS=$(pkg-config --cflags nostr glib-2.0 gobject-2.0) || true
          PKG_LIBS=$(pkg-config --libs nostr glib-2.0 gobject-2.0) || true
          echo "CFLAGS=$PKG_CFLAGS"
          echo "LIBS=$PKG_LIBS"
          g-ir-scanner \
            --namespace=Nostr \
            --nsversion=1.0 \
            --symbol-prefix=nostr_ \
            --identifier-prefix=Nostr \
            --library nostr \
            --library-path /usr/lib \
            --warn-all \
            --pkg glib-2.0 --pkg gobject-2.0 \
            -I /usr/include/nostr \
            /usr/include/nostr/nostr-json.h \
            /usr/include/nostr/nostr-event.h \
            /usr/include/nostr/nostr-event-extra.h \
            /usr/include/nostr/nostr-envelope.h \
            /usr/include/nostr/nostr-filter.h \
            /usr/include/nostr/nostr-pointer.h \
            /usr/include/nostr/nostr-relay.h \
            /usr/include/nostr/nostr-relay-store.h \
            /usr/include/nostr/nostr-simple-pool.h \
            /usr/include/nostr/nostr-subscription.h \
            --output gir-build/Nostr-1.0.gir

      - name: Compile Typelib
        run: |
          g-ir-compiler gir-build/Nostr-1.0.gir -o gir-build/Nostr-1.0.typelib

      - name: Upload GIR artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-gir
          path: gir-build/*
          if-no-files-found: error
